#!/usr/bin/python3
import json
import unicodedata
import datetime
from pymongo import MongoClient
from bson import json_util
import jsonlines
from StringIO import StringIO
from zipfile import ZipFile
from urllib import urlopen

alreadyexist = 0
modified = 0
added = 0

resp = urlopen("https://static.nvd.nist.gov/feeds/json/cve/1.0/nvdcve-1.0-modified.json.zip")
zipfile = ZipFile(StringIO(resp.read()))
with zipfile.open('nvdcve-1.0-modified.json') as file:
	data = json.load(file)

client = MongoClient()

db = client['cves']

allcve = db['cve']

#For each cve in the nist file analyse it and insert the needed fields into the db
for cve in data["CVE_Items"]:
        insertcve = {}

        insertcve["ID"] = (cve["cve"]["CVE_data_meta"]["ID"])
        try:
                insertcve["vendor"] = cve["cve"]["affects"]["vendor"]["vendor_data"][0]["vendor_name"]
        except:
                insertcve["vendor"] = "null"

        try:
                insertcve["product"] = cve["cve"]["affects"]["vendor"]["vendor_data"][0]["product"]["product_data"][0]["product_name"]
        except:
                insertcve["product"] = "null"

        insertcve["Last_Modified"] = cve["lastModifiedDate"]

        insertcve["Published"] = cve["publishedDate"]

        insertcve["Description"] = cve["cve"]["description"]["description_data"][0]['value']
        insertcve["Cvss"] = cve["impact"]

        if db.cve.find( { "ID" : cve["cve"]["CVE_data_meta"]["ID"] } ).count() > 0:
                found = db.cve.find_one( { "ID": cve["cve"]["CVE_data_meta"]["ID"] } )
                del found['_id']
                if (insertcve == found):
                        alreadyexist = alreadyexist+1
                else:
                        modified = modified+1
        else:
                allcve.insert(insertcve)
                added = added+1


#Debug printing
print("Added Cve")
print(added)
print("Alreadyexists")
print(alreadyexist)
print("modified")
print(modified)


#load client for log db
db = client['log']
logclient = db['cvetomongo'] 
now = datetime.datetime.now()


#Insert info into the db log
logclient.insert(json.loads(json.dumps({"Runtime": now.isoformat(), "Totalcountcve": db.cve.count(), "Added": added, "Alreadyexist": alreadyexist, "modified": modified})))
